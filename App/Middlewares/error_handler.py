import logging
from typing import Callable, Awaitable, Any

from aiogram import BaseMiddleware
from aiogram.types import TelegramObject
from aiogram.exceptions import TelegramForbiddenError, TelegramNotFound, TelegramBadRequest


logger = logging.getLogger(__name__)


class IgnoreBlockedUserMiddleware(BaseMiddleware):
    async def __call__(self, handler: Callable[[TelegramObject, dict[str, Any]], Awaitable[Any]], event: TelegramObject, data: dict[str, Any]) -> Any:
        try:
            return await handler(event, data)

        except TelegramForbiddenError as e:
            logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞: {e}")
        except TelegramNotFound as e:
            logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, —É–¥–∞–ª—ë–Ω): {e}")
        except TelegramBadRequest as e:
            logger.warning(f"‚ö† –ü–ª–æ—Ö–æ–π –∑–∞–ø—Ä–æ—Å: {e}")
        except Exception as e:
            logger.exception(f"üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
